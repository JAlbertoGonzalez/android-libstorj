apply plugin: 'com.android.library'
apply plugin: 'de.undercouch.download'
apply plugin: 'com.novoda.bintray-release'

import de.undercouch.gradle.tasks.download.Download

import java.nio.file.Files
import java.nio.file.Path
import java.nio.file.Paths

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 10
        versionName "0.7.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs 'libs'
        }
    }
    compileOptions {
    }
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'de.undercouch:gradle-download-task:3.3.0'
        classpath 'com.novoda:bintray-release:0.5.0'
    }
}

def isLibsDirEmpty() {
    Path libsDir = Paths.get(projectDir.getPath(), 'libs')
    return !Files.exists(libsDir) || !Files.newDirectoryStream(libsDir).iterator().hasNext()
}

task downloadOpenSSLCurlZipFile(type: Download) {
    src 'https://github.com/leenjewel/openssl_for_ios_and_android/releases/download/20170105/openssl_curl_for_ios_android.20170105.zip'
    dest new File(buildDir, 'tmp/openssl_curl_for_ios_android.20170105.zip')
    onlyIfModified true
}

task downloadAndUnzipFile(dependsOn: downloadOpenSSLCurlZipFile, type: Copy) {
    from zipTree(downloadOpenSSLCurlZipFile.dest).matching {
        include '**/android/**/lib/*.a'
        exclude '**/protobuf*/**'
    }
    into new File(projectDir, 'libs')
    includeEmptyDirs false
    eachFile { details ->
        details.path = details.path
                .replaceFirst('output/android/', '')
                .replaceFirst('curl-android-', '')
                .replaceFirst('openssl-android-', '')
                .replaceFirst('/lib', '')
    }
}

downloadAndUnzipFile.onlyIf { isLibsDirEmpty() }
downloadOpenSSLCurlZipFile.onlyIf { isLibsDirEmpty() }
preBuild.dependsOn downloadAndUnzipFile

publish {
    userOrg = 'kaloyan-raev'
    groupId = 'io.storj'
    artifactId = 'libstorj-android'
    publishVersion = '0.7.1'
    desc = 'Libstorj for Android'
    website = 'https://github.com/Storj/android-libstorj'
}

dependencies {
    compile project(':java-libstorj')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
